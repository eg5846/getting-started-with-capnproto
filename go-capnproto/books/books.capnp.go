// Code generated by capnpc-go. DO NOT EDIT.

package books

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Book struct{ capnp.Struct }

// Book_TypeID is the unique identifier for the type Book.
const Book_TypeID = 0xcb05204b39ec3536

func NewBook(s *capnp.Segment) (Book, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Book{st}, err
}

func NewRootBook(s *capnp.Segment) (Book, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Book{st}, err
}

func ReadRootBook(msg *capnp.Message) (Book, error) {
	root, err := msg.RootPtr()
	return Book{root.Struct()}, err
}

func (s Book) String() string {
	str, _ := text.Marshal(0xcb05204b39ec3536, s.Struct)
	return str
}

func (s Book) Title() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Book) HasTitle() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Book) TitleBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Book) SetTitle(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Book) PageCount() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s Book) SetPageCount(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// Book_List is a list of Book.
type Book_List struct{ capnp.List }

// NewBook creates a new list of Book.
func NewBook_List(s *capnp.Segment, sz int32) (Book_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Book_List{l}, err
}

func (s Book_List) At(i int) Book { return Book{s.List.Struct(i)} }

func (s Book_List) Set(i int, v Book) error { return s.List.SetStruct(i, v.Struct) }

func (s Book_List) String() string {
	str, _ := text.MarshalList(0xcb05204b39ec3536, s.List)
	return str
}

// Book_Promise is a wrapper for a Book promised by a client call.
type Book_Promise struct{ *capnp.Pipeline }

func (p Book_Promise) Struct() (Book, error) {
	s, err := p.Pipeline.Struct()
	return Book{s}, err
}

const schema_a23c0346374acc40 = "x\xda\x14\xc8\xcd\xca\x01Q\x00\x06\xe0\xf7=?\xdfg" +
	"1\x0b\xa7XX\x88\x85\x8dB\"\xbfYL\x94\x05\x1b" +
	"\xc7\x0dhh\x92Fs\xa6\x8c\xdc\x83\xcbp;\\\x8a" +
	"{8\x9a\xd5SOy\x18\x0a\xa3\x0f\x80U\xfa\xcf\x8f" +
	"G\xdf\xd9\xb6\xa9\xdf\xb0\x01\xe9\xc3\xcff\xb2\x96\x8b\x17" +
	"4\xff\x01S}\x9aza\xed\x01\xfa\xa3s\xc9\xadw" +
	"\x8a\x98\xa5\xd9|\xe9\\\x02\xecH[\x92\x0aP\x04L" +
	"{\x00\xd8\x96\xa4\xed\x0b\x92\x15\x16\xd7\xdd\x03\xb6#i" +
	"\xa7\x82\x8d\xfc\x92_c\x06\x10\x0c@\x9fE\xe7x\xe5" +
	"\xee)\x98SAP\x81\xbf\x00\x00\x00\xff\xff~\x14\x1c" +
	"\xd4"

func init() {
	schemas.Register(schema_a23c0346374acc40,
		0xcb05204b39ec3536)
}
